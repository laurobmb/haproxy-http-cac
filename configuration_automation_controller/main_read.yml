---
- name: COntroller filetree
  hosts: localhost
  connection: local
  gather_facts: false
  vars_files:
    - vars/main.yml
  vars:
    dir_orgs_vars: ./orgs_vars
    orgs: Default
    env: prod
    description: Projeto de automacao CaC

    controller_configuration_credentials_secure_logging: false

  pre_tasks:
    - name: "Setup authentication (block)"
      no_log: "{{ controller_configuration_filetree_create_secure_logging | default('false') }}"
      when: controller_oauthtoken is not defined
      tags:
        - always
      block:
        - name: "Get the Authentication Token for the future requests"
          ansible.builtin.uri:
            url: "https://{{ controller_hostname }}/api/v2/tokens/"
            user: "{{ controller_username }}"
            password: "{{ controller_password }}"
            method: POST
            force_basic_auth: true
            validate_certs: "{{ controller_validate_certs }}"
            status_code: 201
          register: authtoken_res

        - name: "Set the oauth token to be used since now"
          ansible.builtin.set_fact:
            controller_oauthtoken: "{{ authtoken_res.json.token }}"
            controller_oauthtoken_url: "{{ authtoken_res.json.url }}"

#    - block:
#        - name: Include Tasks to load Galaxy credentials to be added to Organizations
#          ansible.builtin.include_role:
#            name: infra.controller_configuration.filetree_read
#            tasks_from: "{{ create_orgs_credentials }}"
#          loop:
#            - organizations.yml
#            - credentials.yml
#          loop_control:
#            loop_var: create_orgs_credentials
#
#        - name: Include Tasks to add Galaxy credentials to Organizations
#          ansible.builtin.include_role:
#            name: infra.controller_configuration.dispatch
#            apply:
#              tags:
#                - organizations
#                - credentials
#          vars:
#            assign_galaxy_credentials_to_org: false
#            controller_configuration_dispatcher_roles:
#              - {role: organizations, var: controller_organizations, tags: organizations}
#              - {role: credentials, var: controller_credentials, tags: credentials}

  roles:
    - {role: infra.controller_configuration.filetree_read }

#    - role: infra.controller_configuration.object_diff
#      vars:
#        controller_configuration_object_diff_tasks:
#          - {name: workflow_job_templates, var: controller_workflows, tags: workflow_job_templates}
#          - {name: job_templates, var: controller_templates, tags: job_templates}

    - {role: infra.controller_configuration.dispatch }

  post_tasks:
    - name: "Delete the Authentication Token used"
      ansible.builtin.uri:
        url: "https://{{ controller_hostname }}{{ controller_oauthtoken_url }}"
        user: "{{ controller_username }}"
        password: "{{ controller_password }}"
        method: DELETE
        force_basic_auth: true
        validate_certs: "{{ controller_validate_certs }}"
        status_code: 204
      when: controller_oauthtoken_url is defined
...
